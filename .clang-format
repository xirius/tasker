---
Language: Cpp
Standard: Latest

AccessModifierOffset: -2
AlignAfterOpenBracket: AlwaysBreak
AlignArrayOfStructures: Right
AlignConsecutiveAssignments: None
AlignConsecutiveBitFields: None
AlignConsecutiveDeclarations: None
AlignConsecutiveMacros: Consecutive
AlignEscapedNewlines: Left
AlignOperands: Align
AlignTrailingComments: true
AllowAllArgumentsOnNextLine: true
AllowAllConstructorInitializersOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: true
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: Yes
AttributeMacros:
  - '__capability'
  - '__output'
  - '__ununsed'
BinPackArguments: true
BinPackParameters: false
BitFieldColonSpacing: Both

BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel: false
  AfterClass: true
  AfterControlStatement: MultiLine
  AfterEnum: true
  AfterFunction: true
  AfterNamespace: false
  AfterObjCDeclaration: false
  AfterStruct: true
  AfterUnion: true
  AfterExternBlock: false
  BeforeCatch: true
  BeforeElse: true
  BeforeLambdaBody: false
  BeforeWhile: true
  IndentBraces: false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
  SplitEmptyNamespace: false

BreakBeforeBinaryOperators: None
BreakBeforeConceptDeclarations: true
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeColon
BreakInheritanceList: BeforeColon
BreakStringLiterals: true
#-------------------------------------------------------------------------------------------------------------------------------------------
ColumnLimit: 140
CommentPragmas: '^ IWYU pragma:'
CompactNamespaces: false
ConstructorInitializerAllOnOneLineOrOnePerLine: false
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true
DeriveLineEnding: true
DerivePointerAlignment: false
DisableFormat: false
EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: LogicalBlock
ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: true

ForEachMacros:
  - RANGES_FOR
  - FOREACH
  - BOOST_FOREACH
  - Q_FOREACH

IfMacros:
  - IF

IncludeBlocks: Regroup
IncludeCategories:
  - Regex: '^["].*["]'
    Priority: 1
  - Regex: '^<(vanilo|core|my_lib_1|my_lib_2|my_lib_etc)/|^<_vanilo.*>$'
    Priority: 2
  - Regex: '^<(catch2|nonstd|third_party_1|third_party_2|third_party_etc)/'
    Priority: 3
  - Regex: '^<.*'
    Priority: 4
    SortPriority: 0
IncludeIsMainRegex: '(Test)?$'
#IncludeIsMainSourceRegex:

IndentAccessModifiers: false
IndentCaseBlocks: false
IndentCaseLabels: true
IndentExternBlock: Indent
IndentPPDirectives: None
IndentRequires: false
IndentWidth: 4
IndentWrappedFunctionNames: true
InsertTrailingCommas: None

JavaScriptQuotes: Leave
JavaScriptWrapImports: true

KeepEmptyLinesAtTheStartOfBlocks: false
LambdaBodyIndentation: OuterScope
MacroBlockBegin: ''
MacroBlockEnd: ''
MaxEmptyLinesToKeep: 1
NamespaceIndentation: All

NamespaceMacros:
  - NAMESPACE

PPIndentWidth: -1
PackConstructorInitializers: BinPack
#PenaltyBreakAssignment:
#PenaltyBreakBeforeFirstCallParameter:
#PenaltyBreakComment:
#PenaltyBreakFirstLessLess:
#PenaltyBreakString:
#PenaltyBreakTemplateDeclaration:
#PenaltyExcessCharacter:
#PenaltyIndentedWhitespace:
#PenaltyReturnTypeOnItsOwnLine:

PointerAlignment: Left
QualifierAlignment: Leave
#QualifierOrder:                                                                  # DOESN'T WORK (YET?)
#  - inline
#  - restrict
#  - static
#  - volatile
#  - constexpr
#  - const
#  - type

RawStringFormats:
  - Language: TextProto
    Delimiters:
      - 'pb'
      - 'proto'
    EnclosingFunctions:
      - 'PARSE_TEXT_PROTO'
    BasedOnStyle: google
  - Language: Cpp
    Delimiters:
      - 'cc'
      - 'cpp'
    BasedOnStyle: llvm
    CanonicalDelimiter: 'cc'

ReferenceAlignment: Left
ReflowComments: true
ShortNamespaceLines: 10
SortIncludes: CaseSensitive
SortUsingDeclarations: true
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceAroundPointerQualifiers: Before
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: false
SpaceBeforeInheritanceColon: false
SpaceBeforeParens: ControlStatements
#SpaceBeforeParensOptions:                                                      # DOESN'T WORK (YET?)
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInLineCommentPrefix:
  Minimum: 1
  Maximum: 1
SpacesInParentheses: false
SpacesInSquareBrackets: false

StatementAttributeLikeMacros:
  - emit

#A vector of macros that should be interpreted as complete statements.
#StatementMacros:
TabWidth: 4
# A vector of macros that should be interpreted as type declarations instead of as function calls.
TypenameMacros:
  - 'STACK_OF'
  - 'LIST'
UseTab: Never
WhitespaceSensitiveMacros: [ '' ]
...
